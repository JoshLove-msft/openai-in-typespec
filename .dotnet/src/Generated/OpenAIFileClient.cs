// <auto-generated/>

#nullable disable

using System;
using System.ClientModel;
using System.ClientModel.Primitives;
using System.Threading.Tasks;

namespace OpenAI.Files
{
    public partial class OpenAIFileClient
    {
        private readonly Uri _endpoint;
        private const string AuthorizationHeader = "Authorization";
        private readonly ApiKeyCredential _keyCredential;
        private const string AuthorizationApiKeyPrefix = "Bearer";

        protected OpenAIFileClient()
        {
        }

        public virtual ClientResult ListFiles(string purpose, RequestOptions options)
        {
            using PipelineMessage message = CreateListFilesRequest(purpose, options);
            return ClientResult.FromResponse(Pipeline.ProcessMessage(message, options));
        }

        public virtual async Task<ClientResult> ListFilesAsync(string purpose, RequestOptions options)
        {
            using PipelineMessage message = CreateListFilesRequest(purpose, options);
            return ClientResult.FromResponse(await Pipeline.ProcessMessageAsync(message, options).ConfigureAwait(false));
        }

        public virtual ClientResult<OpenAIFileCollection> ListFiles(string purpose)
        {
            ClientResult result = ListFiles(purpose, null);
            return ClientResult.FromValue((OpenAIFileCollection)result, result.GetRawResponse());
        }

        public virtual async Task<ClientResult<OpenAIFileCollection>> ListFilesAsync(string purpose)
        {
            ClientResult result = await ListFilesAsync(purpose, null).ConfigureAwait(false);
            return ClientResult.FromValue((OpenAIFileCollection)result, result.GetRawResponse());
        }
    }
}
