// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace OpenAI.Chat
{
    public partial class ChatCompletionOptions
    {
        private protected IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        internal ChatCompletionOptions(IList<ChatMessage> messages, InternalCreateChatCompletionRequestModel model, float? frequencyPenalty, IDictionary<string, int> logitBias, bool? logprobs, int? topLogprobs, int? maxTokens, int? maxCompletionTokens, int? n, float? presencePenalty, ChatResponseFormat responseFormat, long? seed, InternalCreateChatCompletionRequestServiceTier? serviceTier, BinaryData stop, bool? stream, InternalChatCompletionStreamOptions streamOptions, float? temperature, float? topP, IList<ChatTool> tools, BinaryData toolChoice, bool? parallelToolCalls, string user, BinaryData functionCall, IList<ChatFunction> functions, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Messages = messages;
            Model = model;
            FrequencyPenalty = frequencyPenalty;
            LogitBias = logitBias;
            Logprobs = logprobs;
            TopLogprobs = topLogprobs;
            MaxTokens = maxTokens;
            MaxCompletionTokens = maxCompletionTokens;
            N = n;
            PresencePenalty = presencePenalty;
            ResponseFormat = responseFormat;
            Seed = seed;
            ServiceTier = serviceTier;
            Stop = stop;
            Stream = stream;
            StreamOptions = streamOptions;
            Temperature = temperature;
            TopP = topP;
            Tools = tools;
            ToolChoice = toolChoice;
            ParallelToolCalls = parallelToolCalls;
            User = user;
            FunctionCall = functionCall;
            Functions = functions;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        public float? FrequencyPenalty { get; set; }

        public float? PresencePenalty { get; set; }

        public ChatResponseFormat ResponseFormat { get; set; }

        public InternalCreateChatCompletionRequestServiceTier? ServiceTier { get; set; }

        public float? Temperature { get; set; }

        public float? TopP { get; set; }

        public IList<ChatTool> Tools { get; }
    }
}
