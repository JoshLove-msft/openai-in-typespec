// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace OpenAI.VectorStores
{
    public partial class VectorStore
    {
        private protected IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        internal VectorStore(string id, DateTimeOffset createdAt, string name, int usageBytes, VectorStoreFileCounts fileCounts, VectorStores.VectorStoreStatus status, DateTimeOffset? lastActiveAt, IDictionary<string, string> metadata)
        {
            Id = id;
            CreatedAt = createdAt;
            Name = name;
            UsageBytes = usageBytes;
            FileCounts = fileCounts;
            Status = status;
            LastActiveAt = lastActiveAt;
            Metadata = metadata;
        }

        internal VectorStore(string id, InternalVectorStoreObjectObject @object, DateTimeOffset createdAt, string name, int usageBytes, VectorStoreFileCounts fileCounts, VectorStores.VectorStoreStatus status, VectorStoreExpirationPolicy expiresAfter, DateTimeOffset? expiresAt, DateTimeOffset? lastActiveAt, IDictionary<string, string> metadata, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Id = id;
            Object = @object;
            CreatedAt = createdAt;
            Name = name;
            UsageBytes = usageBytes;
            FileCounts = fileCounts;
            Status = status;
            ExpiresAfter = expiresAfter;
            ExpiresAt = expiresAt;
            LastActiveAt = lastActiveAt;
            Metadata = metadata;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        public string Id { get; set; }

        public DateTimeOffset CreatedAt { get; set; }

        public string Name { get; set; }

        public int UsageBytes { get; set; }

        public VectorStoreFileCounts FileCounts { get; set; }

        public VectorStores.VectorStoreStatus Status { get; set; }

        public DateTimeOffset? ExpiresAt { get; set; }

        public DateTimeOffset? LastActiveAt { get; set; }

        public IDictionary<string, string> Metadata { get; set; }
    }
}
